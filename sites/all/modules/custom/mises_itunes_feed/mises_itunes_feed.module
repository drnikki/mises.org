<?php

 /** 
  * Implements hook_menu().
  */
function mises_itunes_feed_menu() {
  $items['itunes/%'] = array(
    'title' => 'Mises iTunes Feed',
    'page callback' => '_mises_solr_author_fix_rss',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );

  return $items;
}


/**
 * RSS output of Libary Item feeds based on the term argument passed.
 */
function _mises_solr_author_fix_rss($tid) {

  if (!is_numeric($tid)) {
    drupal_set_message('Invalid iTunes feed URL; bad argument.', 'error');
    drupal_goto('<front>');
  }

  $term = taxonomy_term_load($tid);
  if (!$term) {
    drupal_set_message('Invalid iTunes feed URL; bad term argument.', 'error');
    drupal_goto('<front>');
  }

  $feed_img_url = '';
  if (isset($term->field_itunes_image[LANGUAGE_NONE][0]['uri'])) {
    $feed_img_url = file_create_url($term->field_itunes_image[LANGUAGE_NONE][0]['uri']);

    if (isset($term->field_itunes_image[LANGUAGE_NONE][0]['field_file_image_alt_text'][LANGUAGE_NONE][0]['safe_value'])) {
      $feed_img_text = $term->field_itunes_image[LANGUAGE_NONE][0]['field_file_image_alt_text'][LANGUAGE_NONE][0]['safe_value'];
    }
  }
  // drupal_set_message('<pre>' . print_r($term, 1) . '</pre>');
  // return 'x';
  $out = array();
  $out[] = '<?xml version="1.0" encoding="UTF-8"?>';
  $out[] = '<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2enclosuresfull.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?>';
  $out[] = '<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:rawvoice="http://www.rawvoice.com/rawvoiceRssModule/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">';
  $out[] = '<channel>';
  $out[] = '<title>' . $term->name . '</title>';  
  $out[] = '<description>' . $term->description . '</description>';
  $out[] = '<language>en-US</language>';
  $out[] = '<itunes:summary>Mises Podcast</itunes:summary>';
  $out[] = '<itunes:author>Mises</itunes:author>';
  $out[] = '<itunes:explicit>no</itunes:explicit>';
  if (isset($feed_img_url)) {
    $out[] = '<itunes:image href="' . $feed_img_url . '" />';
  }
  $out[] = '<itunes:subtitle>Mises</itunes:subtitle>';
  if (isset($feed_img_url)) {
    $out[] = '<image>';
    if (isset($feed_img_text)) {
      $out[] = '<title>' . $feed_img_text . '</title>';
    }
    $out[] = '<url>' . $feed_img_url . '</url>';
    $out[] = '<link>http://mises.org</link>';
    $out[] = '</image>';
  }
  // Specific how old results can be in days:
  $age_in_days = 30;
  $earliest = date('Y-m-d 00:00:00', time() - (60 * 60 * 24 * $age_in_days));

  // Fetch Library Items with the provided term ID:
  $term_query = db_query("SELECT n.nid, d.field_published_date_value " .
    "FROM node n, taxonomy_index t, field_data_field_published_date d " .
    "WHERE n.nid = t.nid AND t.tid = :tid AND d.entity_id = n.nid AND " .
    "d.field_published_date_value >= :earliest " .
    "ORDER BY d.field_published_date_value DESC " .
    "LIMIT 10",
    array(
      ':tid' => $tid,
      ':earliest' => $earliest,
    )
  );
  foreach ($term_query as $result) {
    $node = node_load($result->nid);
    //drupal_set_message('<pre>' . print_r($node, 1) . '</pre>');
    //return 'x';
    $out[] = '<item>';
    $out[] = '<title>' . $node->title . '</title>';
    $out[] = '<link>' . url('node/' . $node->nid, array('absolute' => TRUE)) . '</link>';
    $out[] = '<pubDate>' . date("r", strtotime($result->field_published_date_value)) . '</pubDate>';
    $out[] = '<guid isPermaLink="false">' . url('node/' . $node->nid, array('absolute' => TRUE)) . '</guid>';
    if (isset($node->body[LANGUAGE_NONE][0]['value'])) {
      $out[] = '<description><![CDATA[' . strip_tags($node->body[LANGUAGE_NONE][0]['value']) . ']]></description>';
    }
    $out[] = '<itunes:subtitle>' . 'Mises' . '</itunes:subtitle>';
    if (isset($node->field_teaser_text[LANGUAGE_NONE][0]['value'])) {
      $out[] = '<itunes:summary><![CDATA[' . strip_tags($node->field_teaser_text[LANGUAGE_NONE][0]['value']) . ']]></itunes:summary>';
    } else {
      $out[] = '<itunes:summary><![CDATA[' . 'A Mises podcast.' . '</itunes:summary>';
    }
    unset($author);
    if (isset($node->field_author_1[LANGUAGE_NONE][0]['target_id'])) {
      $author = node_load($node->field_author_1[LANGUAGE_NONE][0]['target_id']);
    }
    if (isset($author->title)) {
      $out[] = '<itunes:author>' . $author->title . '</itunes:author>';
    } else {
      $out[] = '<itunes:author>' . 'Mises' . '</itunes:author>';
    }
    $out[] = '<itunes:explicit>no</itunes:explicit>';
    $out[] = '<itunes:keywords>Mises</itunes:keywords>';
    if (isset($node->field_media_collection[LANGUAGE_NONE][0]['value'])) {
      $file_query = db_query("SELECT field_media_fid FROM field_data_field_media WHERE entity_id = :entity_id",
        array(
          ':entity_id' => $node->field_media_collection[LANGUAGE_NONE][0]['value'],
        )
      );
      unset($audio_file_url);
      foreach ($file_query as $result) {
        $file = file_load($result->field_media_fid);
        //drupal_set_message('<pre>' . print_r($file, 1) . '</pre>');
        //return 'x'; 
        $audio_file_url = file_create_url($file->uri);
      }
      if ($audio_file_url) {
        $out[] = '<enclosure url="' . $audio_file_url . '" length="' . $file->filesize . '" type="' . $file->filemime . '" />';
      }
    }
    $out[] = '</item>';
  }


  $out[] = '</channel>';
  $out[] = '</rss>';

  echo implode("\n", $out);
}

