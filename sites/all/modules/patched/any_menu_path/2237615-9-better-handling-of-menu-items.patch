diff --git a/any_menu_path.module b/any_menu_path.module
index a8a4900..74b3b24 100644
--- a/any_menu_path.module
+++ b/any_menu_path.module
@@ -76,7 +76,9 @@ function any_menu_path_menu_edit_item_before_validate($form, &$form_state) {
   if ($form_state['values']['any_menu_path_no_path_valid'] == 1) {
     $form_state['complete form']['#submit'][] = 'any_menu_path_menu_edit_menu_submit';
     $form_state['storage']['any_menu_path_link_path'] = $form_state['values']['link_path'];
-    $form_state['values']['link_path'] = 'http://example.com';
+    if (!url_is_external($form_state['values']['link_path']) && !drupal_valid_path($form_state['values']['link_path'])) {
+      $form_state['values']['link_path'] = 'http://example.com';
+    }
   }
   else {
     if (!empty($any_menus)) {
@@ -101,9 +103,34 @@ function any_menu_path_menu_edit_menu_submit($form, &$form_state) {
     $mlid = $form_state['values']['mlid'];
     $link_path = $form_state['storage']['any_menu_path_link_path'];
 
+    $url_parsed = drupal_parse_url($link_path);
+
+    $original_link = db_select('menu_links', 'm')
+    ->fields('m', array('options'))
+    ->condition('mlid', $mlid)
+    ->execute()
+    ->fetchAssoc();
+
+    if (!empty($original_link['options'])) {
+      $options = unserialize($original_link['options']);
+    }
+    if (!empty($url_parsed['fragment'])) {
+      $options['fragment'] = $url_parsed['fragment'];
+    }
+    else {
+      unset($options['fragment']);
+    }
+    if (!empty($url_parsed['query'])) {
+      $options['query'] = $url_parsed['query'];
+    }
+    else {
+      unset($options['query']);
+    }
+
     db_update('menu_links')
     ->fields(array(
-        'link_path' => $link_path,
+        'link_path' => $url_parsed['path'] ? $url_parsed['path'] : '',
+        'options' => serialize($options),
       ))
     ->condition('mlid', $mlid)
     ->execute();
@@ -152,7 +179,7 @@ function any_menu_path_view_paths() {
         'data' => array(
           check_plain($menu_item->link_title),
           check_plain($menu_item->link_path),
-          l(t('edit'), 'admin/structure/menu/item/' . $mlid . '/edit'),
+          l(t('edit'), 'admin/structure/menu/item/' . $mlid . '/edit', array('query' => drupal_get_destination())),
         ),
       );
     }
@@ -170,66 +197,3 @@ function any_menu_path_view_paths() {
   return $html;
 }
 
-/**
- * Implements hook_form_menu_overview_form_alter().
- */
-function any_menu_path_form_menu_overview_form_alter(&$form, &$form_state, $form_id) {
-
-  $form['#submit'][] = 'any_menu_path_form_menu_overview_submit';
-}
-
-/**
- * A submit that sets the 'external' field of the overridden menu paths back to 1
- * after the core menu module resets it after its validation.
- */
-function any_menu_path_form_menu_overview_submit($form, &$form_state) {
-
-  $changed_menus = array();
-
-  foreach ($form_state['values'] as $key => $value) {
-
-    if (substr($key, 0, 5) == 'mlid:') {
-
-      $changed_menus[] = $form_state['values'][$key]['mlid'];
-    }
-  }
-
-  $any_menus = variable_get('any_menu_path', array());
-
-  foreach ($changed_menus as $mlid) {
-
-    if (in_array($mlid, $any_menus)) {
-
-      db_update('menu_links')
-        ->fields(array('external' => 1))
-        ->condition('mlid', $mlid)
-        ->execute();
-    }
-  }
-}
-
-
-/**
- * Allows anchors and queries in the path
- */
-function any_menu_path_url_outbound_alter(&$path, &$options, $original_path) {
-
-  if (isset($path)) {
-
-    $parsed_url = parse_url($path);
-    
-    if(!empty($parsed_url['path'])) {
-      $path = $parsed_url['path'];
-    }
-    
-    if(!empty($parsed_url['fragment'])) {
-      $options['fragment'] = $parsed_url['fragment'];
-    }
-    
-    if(!empty($parsed_url['query'])) {
-      parse_str($parsed_url['query'], $query_array);
-      $options['query'] = $query_array;
-    }
-    
-  }
-}
